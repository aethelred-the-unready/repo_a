stages:
  # To check if $GITHUB_OAUTH_TOKEN is able to publish a GitHub release,
  # trigger a custom TravisCI build for this branch using the CUSTOM CONFIG:
  #
  #   env: VALIDATE_TRAVIS=yes
  #
  - name: 'validate travis'
    if: 'env(VALIDATE_TRAVIS) = yes'
  - name: check
    if: 'NOT env(VALIDATE_TRAVIS) = yes'
  - name: spec
    if: 'NOT env(VALIDATE_TRAVIS) = yes'
  - name: deploy
    if: 'tag IS present AND NOT env(VALIDATE_TRAVIS) = yes'

jobs:
  include:
  - stage: spec
    script:
    - 'echo "===== job script: OK"'
  - stage: check
    script:
    - 'echo "===== job script: OK"'
  - stage: deploy
    script:
    - 'echo "===== job script: OK"'
    deploy:
    - name: deploy (script, tags = true)
      provider: script
      script: 'echo "=====***** provider script: ok (tags = true)"'
      on:
        tags: true
    - provider: releases
      api_key: $GITHUB_OAUTH_TOKEN
      skip_cleanup: true
      on:
        tags: true
        condition: "($SKIP_FORGE_PUBLISH != true)"
  - stage: 'validate travis'
    name: validate GitHub OAuth token in TravisCI has sufficient scope to release
    script:
    - 'printf "\n===== GITHUB_OAUTH_TOKEN validation
               \n(TRAVIS_SECURE_ENV_VARS=%b)\n\n" $TRAVIS_SECURE_ENV_VARS;
      OWNER="$(echo $TRAVIS_REPO_SLUG | cut -d/ -f1)";
      curl -H "Authorization: token ${GITHUB_OAUTH_TOKEN}" "https://api.github.com/users/$OWNER"
      -I | grep ^X-OAuth-Scopes | egrep -w "repo|public_repo" '
  - stage: 'validate travis'
    name: 'validate that TravisCI Puppet Forge credentials can authenticate'
    before_script:
      - 'COOKIE_FILE="$(mktemp)"'
      - 'HEADERS_FILE="$(mktemp)"'
    script:
    - 'printf "\n===== PUPPET_FORGE_PW validation " \
              "\n(TRAVIS_SECURE_ENV_VARS=%b)\n\n" $TRAVIS_SECURE_ENV_VARS;
       user_agent=''SimpRelengTravisCI/0.0.0-testing Purpose/forge-credential-test-for-ci-pipeline'';
       authenticity_token="$(curl -c "$COOKIE_FILE" -L https://forge.puppet.com/login | grep ''input name="authenticity_token"'' | sed -e ''s/^.*value="//'' | cut -d\" -f1)" ;
       curl -b "$COOKIE_FILE" -D "$HEADERS_FILE" -d
         "user_name=simp&password=${FORGE_PW}&utf-8=%E2%9C%93&return_to_path=%2F&authenticity_token=${authenticity_token}"
         -L https://forge.puppet.com/login 2>&1 >/dev/null;
       grep ''^HTTP/1.1 200 OK'' "$HEADERS_FILE"'
    after_script:
      - 'rm -f "$COOKIE_FILE" "$HEADERS_FILE"'
